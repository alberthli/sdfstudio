[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "sdfstudio"
version = "0.3.2"
description = "Fork of sdfstudio."
readme = "README.md"
license = { text="Apache 2.0"}
requires-python = ">=3.8.0"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
]
dependencies = [
    "appdirs>=1.4.4",
    "av>=10.0.0",
    "tyro>=0.5.5",
    "gdown>=4.7.1",
    "ninja>=1.11.1",
    "functorch>=2.0.0",
    "h5py>=3.9.0",
    "imageio>=2.31.1",
    "ipywidgets>=8.1.0",
    "jupyterlab>=4.0.4",
    "matplotlib>=3.7.2",
    "mediapy>=1.1.8",
    "msgpack>=1.0.5",
    "msgpack_numpy>=0.4.8",
    "nerfacc>=0.5.2",
    "open3d>=0.17.0",
    "opencv-python>=4.6.0.66",
    "plotly>=5.15.0",
    "protobuf>=3.20.3",
    "pymeshlab>=2022.2.post4",
    "pyngrok>=6.0.0",
    "python-socketio>=5.8.0",
    "requests>=2.31.0",
    "rich>=13.5.2",
    "scikit-image>=0.21.0",
    "tensorboard>=2.13.0",
    "torch>=2.0.1",
    "torchmetrics[image]>=1.0.2",
    "torchtyping>=0.1.4",
    "torchvision>=0.15.2",
    "u-msgpack-python>=2.8.0",
    #"nuscenes-devkit>=1.1.1",
    "wandb>=0.15.8",
    "xatlas>=0.0.7",
    "trimesh>=3.23.0",
]

[project.optional-dependencies]
# Development packages
dev = [
    "black[jupyter]>=22.3.0",
    "pylint>=2.13.4",
    "pytest>=7.1.2",
    "pytest-xdist>=2.5.0",
    "typeguard>=2.13.3",
]

# Documentation related packages
docs = [
    "furo>=2022.09.29",
    # Specifying ipython for https://github.com/ipython/ipython/issues/13845
    "ipython>=8.6.0",
    "readthedocs-sphinx-search>=0.1.2",
    "myst-nb>=0.16.0",
    "nbconvert>=7.2.5",
    "nbformat>=5.5.0",
    "sphinx>=5.2.1",
    "sphinxemoji>=0.2.0",
    "sphinx-argparse>=0.3.1",
    "sphinx-copybutton>=0.5.0",
    "sphinx-design>=0.2.0",
    "sphinxext-opengraph>=0.6.3"
]

[project.scripts]
# Note, add entrypoint name to scripts/completions/install.py to include CLI completion
ss-install-cli = "sdfstudio.scripts.completions.install:entrypoint"
ss-process-data = "sdfstudio.scripts.process_data:entrypoint"
ss-download-data = "sdfstudio.scripts.downloads.download_data:entrypoint"
ss-train = "sdfstudio.scripts.train:entrypoint"
ss-eval = "sdfstudio.scripts.eval:entrypoint"
ss-render = "sdfstudio.scripts.render:entrypoint"
ss-export = "sdfstudio.scripts.exporter:entrypoint"
ss-dev-test = "sdfstudio.scripts.github.run_actions:entrypoint"
ss-bridge-server = "sdfstudio.viewer.server.server:entrypoint"
ss-extract-mesh = "sdfstudio.scripts.extract_mesh:entrypoint"
ss-render-mesh = "sdfstudio.scripts.render_mesh:entrypoint"


[options]
# equivalent to using --extra-index-url with pip, which is needed for specifying the CUDA version torch and torchvision
dependency_links = [
    "https://download.pytorch.org/whl/cu118"
]

[tool.setuptools.packages.find]
include = ["sdfstudio*"]

[tool.setuptools.package-data]
"*" = ["*.json", "py.typed", "setup.bash", "setup.zsh"]

# black
[tool.black]
line-length = 120

# pylint
[tool.pylint.messages_control]
max-line-length = 120
generated-members = ["numpy.*", "torch.*", "cv2.*", "cv.*"]
good-names-rgxs = "^[_a-zA-Z][_a-z0-9]?$"
ignore-paths = ["sdfstudio.scripts/colmap2nerf.py"]
jobs = 0
ignored-classes = ["TensorDataclass"]

disable = [
  "duplicate-code",
  "fixme",
  "logging-fstring-interpolation",
  "too-many-arguments",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-locals",
  "unnecessary-ellipsis",
]

#pytest
[tool.pytest.ini_options]
addopts = "-n=4 --typeguard-packages=sdfstudio --torchtyping-patch-typeguard --disable-warnings"
testpaths = [
    "tests",
]

# pyright
[tool.pyright]
include = ["sdfstudio"]
exclude = ["**/node_modules",
    "**/__pycache__",
]
ignore = ["sdfstudio/viewer"]
defineConstant = { DEBUG = true }

reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateImportUsage = false
reportUndefinedVariable = false

pythonVersion = "3.10"
pythonPlatform = "Linux"
